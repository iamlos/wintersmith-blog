<?xml version="1.0" encoding="utf-8" ?>

<rss version='2.0' xmlns:content='http://purl.org/rss/1.0/modules/content/' xmlns:wfw='http://wellformedweb.org/CommentAPI/' xmlns:dc='http://purl.org/dc/elements/1.1/' xmlns:atom='http://www.w3.org/2005/Atom'>
  <channel>
    <title>Technology, design, and development - technoholic.ca</title>
    <atom:link href="//feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>/</link>
    <description>One man&#x27;s obsession with creating the interwebs.</description>
    <pubDate>Sun, 06 Apr 2014 13:37:00 -0700</pubDate>
    <language>en</language>

    
    
    <item>
      <title>PSA: Why your code changes are not displaying after browser refresh</title>
      <link>//articles/code-changes-not-displaying-after-refresh/</link>
      <pubDate>Fri, 28 Mar 2014 13:37:00 -0700</pubDate>
      <guid isPermaLink="true">//articles/code-changes-not-displaying-after-refresh/</guid>
      <author>peter</author>
      <description>After weeks of frustration, I finally figured out why my PHP code changes on my local development box weren’t always coming up in the browser after several refreshes. As it turns out, it’s a new OPCache setting as of PHP 5.5 that comes with MAMP.
</description>
    </item>
    
    <item>
      <title>Best Image Viewer for Mac Xee</title>
      <link>//articles/best-image-viewer-for-mac-xee/</link>
      <pubDate>Sat, 20 Dec 2008 14:44:46 -0800</pubDate>
      <guid isPermaLink="true">//articles/best-image-viewer-for-mac-xee/</guid>
      <author>peter</author>
      <description>When I used Windows, I used to use a program called ACDSee to scroll through large amounts of images within folders. It was a great way to quickly go through any type of images within a folder. This was also very useful because I tend to keep a lot of PSDs of web designs with various version of a design, so ACDSee made it really easy to scroll through and compare them. When I switched to Mac, I couldn’t do this as easily anymore. I went on a hunt to find the best image viewer for Mac, and found a great open source solution in a program called Xee. Xee is light weight, simple, and does everything the old ACDSee did for me. I highly recommend downloading this one.
</description>
    </item>
    
    <item>
      <title>Drupal 6 page.tpl.php template based on path</title>
      <link>//articles/drupal-6-page-tpl-php-template-based-on-path/</link>
      <pubDate>Sat, 05 Nov 2011 10:28:28 -0700</pubDate>
      <guid isPermaLink="true">//articles/drupal-6-page-tpl-php-template-based-on-path/</guid>
      <author>peter</author>
      <description>Use custom page.tpl.php files based on the URL path alias of your pages to create custom template files. Add the following code to your theme’s template.php file.
function phptemplate_engine_preprocess_page(&amp;amp;$variables) {
  $alias = drupal_get_path_alias($_GET[&#x27;q&#x27;]);

  if ($alias != $_GET[&#x27;q&#x27;]) {
    $template_filename = &#x27;page&#x27;;

    foreach (explode(&#x27;/&#x27;, $alias) as $path_part) {
      $template_filename = $template_filename . &#x27;-&#x27; . $path_part;
      $variables[&#x27;template_files&#x27;][] = $template_filename;
    }
  }
}

Create a copy of page.tpl.php and rename it to page-YOURPATH.tpl.php and begin to make your own custom edits specific to that path. Now, if you’ve got a www.yoursite.com/blog path, then Drupal will pick up page-blog.tpl.php as the template for that page. The above code is for Drupal 6. You may need to clear Drupal’s cache after you’ve done this for it to take effect.
</description>
    </item>
    
    <item>
      <title>Improving your jQuery code</title>
      <link>//articles/improving-your-jquery-code/</link>
      <pubDate>Sat, 16 Nov 2013 16:32:21 -0800</pubDate>
      <guid isPermaLink="true">//articles/improving-your-jquery-code/</guid>
      <author>peter</author>
      <description>Lately, I’ve been trying to improve my jQuery code performance, and get a better handle on writing plain JavaScript. In terms of jQuery in particular, I came across this post today, which although a couple years old now, provides some great tips that I think a lot of people could benefit from reading. There are a few great examples of writing better performing jQuery DOM manipulation in there.
</description>
    </item>
    
    <item>
      <title>New Ghost.js inspired WordPress theme</title>
      <link>//articles/new-ghost-inspired-wordpress-theme/</link>
      <pubDate>Sun, 15 Dec 2013 16:39:04 -0800</pubDate>
      <guid isPermaLink="true">//articles/new-ghost-inspired-wordpress-theme/</guid>
      <author>peter</author>
      <description>Recently, I’ve been inspired by the Ghost blogging platform, which I think has a really clean and elegant default theme, so I built a WordPress theme that borrows from some of the ideas that I liked from that theme.
</description>
    </item>
    
    <item>
      <title>jQuery Shine animation effect</title>
      <link>//articles/jquery-shine-animation-effect/</link>
      <pubDate>Sat, 13 Nov 2010 10:16:39 -0800</pubDate>
      <guid isPermaLink="true">//articles/jquery-shine-animation-effect/</guid>
      <author>peter</author>
      <description>I’ve been diving deeper into jQuery lately, because a few clients have been requesting Flash-like functionality for their websites, and I’ve been avoiding Flash since before Steve Jobs made it cool to do so. I have to say, there is more and more that jQuery can do that Flash used to only do. I recently came across one great example of this while researching button effects for a personal project (release coming soon). Addy from AddyOsmani.com posted this great article about a shine effect using jQuery called &amp;quot;ShineTime – A Kick-Ass New jQuery &amp;amp;amp; CSS3 Gallery With Animated Shine Effects.&amp;quot; The best part of the effect is that it’s so simple to implement and if you’re at all comfortable with jQuery and CSS, the method used with background-position opens up a world of possibility with other effects other than shine, which at least I wasn’t aware of. Check out his demo to see the effect in action.
The entire thing really boils down to a few lines of jQuery Javascript code and some CSS. When a event happens, such as a hover or a page load, a shine PNG image is changed from a background position of off the screen to one that crosses to the other side off the screen. With a little modification, I made the effect display a few seconds after the page loads using setTimeout, rather than when you hover over an element, which produced a great little embellishment for a button or a logo when a visitors comes to the site. It’s a great little effect that you used to only be able to do with Flash.
</description>
    </item>
    
    <item>
      <title>100 Really Good Quality iPhone and iPod Touch Wallpapers</title>
      <link>//articles/100-really-good-quality-iphone-and-ipod-touch-wallpapers/</link>
      <pubDate>Tue, 06 Jan 2009 14:52:30 -0800</pubDate>
      <guid isPermaLink="true">//articles/100-really-good-quality-iphone-and-ipod-touch-wallpapers/</guid>
      <author>peter</author>
      <description>In my last post, I wrote about Poolgo, a great little site with really good iPhone wallpapers. These are quality wallpapers made by real designers. Well, today I happened upon a Smashing Magazine article with 100 really sweet iPhone wallpapers, which includes Poolgo in its list, but also includes way more other wallpapers. I just had to post and update with a link to this Smashing Magazine article, because it really goes way above and beyond what I wrote.
If you’re looking for some great iPhone or iPod Touch wallpapers, you need to read this article.
</description>
    </item>
    
    <item>
      <title>Quality iPhone and iPod Touch Wallpapers Poolga</title>
      <link>//articles/quality-iphone-and-ipod-touch-wallpapers-poolga/</link>
      <pubDate>Sun, 04 Jan 2009 15:20:50 -0800</pubDate>
      <guid isPermaLink="true">//articles/quality-iphone-and-ipod-touch-wallpapers-poolga/</guid>
      <author>peter</author>
      <description>I just came across a great iPhone and iPod Touch wallpaper site called Poolga, which features quality wallpapers from designers and illustrators from around the world. This isn’t another cheesy wallpaper site. All the wallpapers have a great design flare to them and look like they were made by people with talent.
</description>
    </item>
    
    <item>
      <title>Trying Wintersmith for blogging</title>
      <link>//articles/trying-wintersmith-for-blogging/</link>
      <pubDate>Sun, 06 Apr 2014 13:37:00 -0700</pubDate>
      <guid isPermaLink="true">//articles/trying-wintersmith-for-blogging/</guid>
      <author>peter</author>
      <description>I’ve used WordPress, Drupal, and other platforms in past for personal blogs, and for the most part, they’ve always been
overkill for what I needed the site to do. The idea of using a static site generator like Wintersmith for its the simplicity and performance sounded pretty appealing, so I’m giving it a try.
</description>
    </item>
    
    <item>
      <title>WordPress and sIFR</title>
      <link>//articles/wordpress-and-sifr/</link>
      <pubDate>Wed, 22 Oct 2008 09:04:15 -0700</pubDate>
      <guid isPermaLink="true">//articles/wordpress-and-sifr/</guid>
      <author>peter</author>
      <description>I’ve been tinkering around with sIFR over the last day and a bit in my free time, and I’ve got it working on the site for the top level navigation menu and titles. I have to say, it’s pretty sweet. Now, all of my blog post titles can show up smooth and crisp and I have way more control over the font on the site. I’m really pleased with how it has turned out. It wasn’t even difficult to implement.
I followed the sIFR wiki and had it working to my liking within a few hours. It’s even working nicely with my transparent PNG background fade, so I’m happy all around this morning.
</description>
    </item>
    

  </channel>
</rss>
